<mah:MetroWindow x:Class="inspector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:inspector"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="MQTT Inspector" 
        Height="720" 
        Width="1280"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:ConnectionStatusConverter x:Key="ConnectionStatusConverter"/>
            <local:ConnectTextConverter x:Key="ConnectTextConverter"/>
            <local:NotificationBrushConverter x:Key="NotificationBrushConverter"/>
            <local:SubscribeStatusConverter x:Key="SubscribeStatusConverter"/>
            <local:PauseResumeButtonConverter x:Key="PauseResumeButtonConverter"/>
            <local:PauseAllTextConverter x:Key="PauseAllTextConverter"/>
            <local:QualityOfServiceConverter x:Key="QualityOfServiceConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button Visibility="{Binding ShowNotification, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Style="{StaticResource MahApps.Styles.Button.Window.Notification.VisualStudio}"
                    ToolTip="{Binding NotificationToolTip}"
                    Click="SilenceNotification">
                <iconPacks:PackIconEntypo Width="16" Height="16" Kind="Flag"/>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>
        <!-- Auto is basically use the minimum size for the controls laid out -->
        <!-- * is basically use an equal size -->

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
            <!-- splitter -->
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <!-- splitter -->
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <!-- First tab control -->
        <!-- TODO: disable closing these tabs (dysfunctional otherwise) -->
        <TabControl Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Margin="10">
            <TabItem Header="Connect">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Broker connection status -->
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection Status:"/>
                            <Label Content="{Binding IsConnected, Converter={StaticResource ConnectionStatusConverter}}"/>
                        </StackPanel>
                    </Grid>

                    <!-- Broker connection selection area -->
                    <Grid Grid.Row="1"
                          IsEnabled="{Binding IsDisconnected}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Margin="5" 
                                    Grid.Column="0">
                            <Label Content="Broker IP"/>
                            
                            <ComboBox IsEditable="True"
                                      Text="{Binding ConnectIP}"/>
                        </StackPanel>

                        <StackPanel Margin="5" 
                                    Grid.Column="1">
                            <Label Content="Broker Port"/>
                            
                            <ComboBox IsEditable="True"
                                      Text="{Binding ConnectPort}"/>
                        </StackPanel>
                    </Grid>

                    <Separator Margin="5"
                               Grid.Row="2"/>

                    <Grid Margin="5" 
                          Grid.Row="3">
                        <StackPanel>
                            <CheckBox Margin="5"
                                      Content="Enable TLS Encryption"
                                      IsChecked="{Binding ConnectEnableTLS}"/>

                            <Grid IsEnabled="{Binding ConnectEnableTLS}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Root CA cert -->
                                <Label Grid.Row="0"
                                       Content="Root CA Certificate Filepath"/>
                                
                                <TextBox Grid.Row="1"
                                         Text="{Binding ConnectCertCA}"
                                         Margin="0, 0, 10, 0"/>
                                
                                <Button Grid.Row="1"
                                        Grid.Column="1"
                                        Content="Choose"
                                        Padding="10, 0, 10, 0"/>

                                
                                <!-- Local client cert -->
                                <Label Grid.Row="2"
                                       Content="Client Certificate Filepath"/>
                                
                                <TextBox Grid.Row="3"
                                         Text="{Binding ConnectCertClient}"
                                         Margin="0, 0, 10, 0"/>
                                
                                <Button Grid.Row="3"
                                        Grid.Column="1"
                                        Content="Choose"
                                        Padding="10, 0, 10, 0"/>

                                
                                <!-- Client private key -->
                                <Label Grid.Row="4"
                                       Content="Private Key Filepath"/>
                                
                                <TextBox Grid.Row="5"
                                         Text="{Binding ConnectCertPrivate}"
                                         Margin="0, 0, 10, 0"/>
                                
                                <Button Grid.Row="5"
                                        Grid.Column="1"
                                        Content="Choose"
                                        Padding="10, 0, 10, 0"/>
                            </Grid>
                        </StackPanel>

                    </Grid>

                    <Separator Margin="5"
                               Grid.Row="4"/>

                    <Button Margin="5" 
                            Grid.Row="5" 
                            Content="{Binding IsConnected, Converter={StaticResource ConnectTextConverter}}"
                            Click="ConnectButton_Clicked"/>
                </Grid>

            </TabItem>

            <TabItem Header="Subscribe">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Broker connection status -->
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection Status:"/>
                            <Label Content="{Binding IsConnected, Converter={StaticResource ConnectionStatusConverter}}"/>
                        </StackPanel>
                    </Grid>

                    <!-- Broker subscribe area -->
                    <Grid Grid.Row="1"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Margin="5" 
                                    Grid.Column="0">
                            <Label Content="MQTT Topic"/>
                            
                            <ComboBox IsEditable="True"
                                      Text="{Binding SubscribeTopic}"/>
                        </StackPanel>

                        <StackPanel Margin="5" 
                                    Grid.Column="1"
                                    IsEnabled="{Binding IsSubscribeQoSEditable}">
                            <Label Content="Quality of Service"/>
                            
                            <ComboBox SelectedItem="{Binding SubscribeQoS, Converter={StaticResource QualityOfServiceConverter}}"
                                      ItemsSource="{Binding QoSOptions}"/>
                        </StackPanel>
                    </Grid>

                    <Button Grid.Row="2"
                            Margin="5"
                            Content="{Binding IsCurrentTopicSubscribed, Converter={StaticResource SubscribeStatusConverter}}"
                            Click="SubscribeButton_Clicked"
                            IsEnabled="{Binding IsConnected}"/>

                    <Separator Grid.Row="3"
                               Margin="5"/>

                    <!-- Subscribed topics area -->
                    <Grid Grid.Row="4"
                          Margin="5"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0"
                               Content="Subscribed Messages"/>

                        <ListView Grid.Row="1"
                                  ItemsSource="{Binding SubscribedMessagesData}"
                                  Name="subscribedTopics"
                                  BorderBrush="Gray"
                                  BorderThickness="2">
                        </ListView>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Publish">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Broker connection status -->
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection Status:"/>
                            <Label Content="{Binding IsConnected, Converter={StaticResource ConnectionStatusConverter}}"/>
                        </StackPanel>
                    </Grid>

                    <!-- Topic/QoS publish area -->
                    <Grid Grid.Row="1"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Margin="5" 
                                    Grid.Column="0"
                                    IsEnabled="True">
                            <Label Content="MQTT Topic"/>
                            <ComboBox IsEditable="True"
                                      Text="{Binding PublishTopic}"/>
                        </StackPanel>

                        <StackPanel Margin="5" 
                                    Grid.Column="1">
                            <Label Content="Quality of Service"/>
                            <ComboBox SelectedItem="{Binding PublishQoS, Converter={StaticResource QualityOfServiceConverter}}"
                                      ItemsSource="{Binding QoSOptions}"/>
                        </StackPanel>
                    </Grid>

                    <!-- message/format publish area -->
                    <Grid Grid.Row="2"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0"
                                    Margin="5">
                            <Label Content="MQTT Message"/>
                            <ComboBox IsEditable="True"
                                      Text="{Binding PublishMessage}"/>
                        </StackPanel>

                        <StackPanel Grid.Column="1"
                                    Margin="5">
                            <Label Content="Publish Format"/>
                            <ComboBox SelectedItem="{Binding PublishMessageFormat}"
                                      ItemsSource="{Binding MessageFormatOptions}"/>
                        </StackPanel>
                    </Grid>

                    <!-- configuration flags area -->
                    <Grid Grid.Row="3"
                          Margin="5"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0"
                               Grid.Column="0"
                               Content="MQTT Configuration"/>

                        <CheckBox Grid.Row="1"
                                  Grid.Column="0"
                                  Content="Retain Flag"/>

                        <StackPanel Grid.Row="1"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <CheckBox Content="Periodic"
                                      IsChecked="{Binding PublishIsPeriodic}"/>
                            
                            <ComboBox Margin="5"
                                      Text="{Binding PublishPeriodicRate}"
                                      IsEditable="True"
                                      IsEnabled="{Binding PublishIsPeriodic}"/>
                            
                            <Label Content="ms"/>
                        </StackPanel>
                    </Grid>

                    <Separator Grid.Row="4"
                               Margin="5"/>

                    <!-- transmission status area -->
                    <Grid Grid.Row="5"
                          IsEnabled="{Binding IsConnected}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0"
                              Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0"
                                   Content="Transmit Status:"/>

                            <Label Grid.Column="1"
                                   Content="{Binding TransmissionStatus}"/>

                            <mah:ProgressRing Grid.Column="2"
                                              Height="20"
                                              Width="20"
                                              IsActive="{Binding IsCurrentTopicOnline}"
                                              HorizontalAlignment="Left"
                                              Margin="5, 0, 0, 0"
                                              Foreground="{DynamicResource MahApps.Brushes.Badged.Background}"/>

                            <!--For the button once we are done testing pause/play icons!-->
                            <!--Content="{Binding PauseStatus}"-->
                            <Button Grid.Column="3"
                                    HorizontalAlignment="Right"
                                    Visibility="{Binding IsCurrentTopicPausable, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Click="PauseButton_Clicked">
                                <iconPacks:PackIconEntypo Kind="{Binding IsCurrentTopicPaused, Converter={StaticResource PauseResumeButtonConverter}}"/>
                            </Button>
                        </Grid>
                    </Grid>

                    <Separator Grid.Row="6"
                               Margin="5"/>

                    <Button Grid.Row="7"
                            Margin="5"
                            Content="{Binding PublishStatus}"
                            Click="PublishButton_Clicked"
                            IsEnabled="{Binding IsConnected}"/>

                    <Grid Grid.Row="8"
                          Margin="5"
                          IsEnabled="{Binding IsAnyTopicScheduled}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                                Content="{Binding IsPeriodicGloballyPaused, Converter={StaticResource PauseAllTextConverter}}"
                                Click="PauseAllButton_Clicked"
                                Margin="0, 0, 5, 0"/>

                        <Button Grid.Column="1"
                                Content="Kill All"
                                Click="KillAllButton_Clicked"
                                Margin="5, 0, 0, 0"/>
                    </Grid>

                    <Separator Grid.Row="9"
                               Margin="5"/>

                    <Grid Grid.Row="10"
                          Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0"
                               Content="Current Messages"/>

                        <DataGrid Grid.Row="1"
                                  DataContext="{Binding PublishMessagesData}"
                                  ItemsSource="{Binding}"
                                  AutoGenerateColumns="False"
                                  BorderBrush="Gray"
                                  BorderThickness="2"
                                  IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Topic" Binding="{Binding Topic}"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding Status}"/>
                            </DataGrid.Columns>

                        </DataGrid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <!-- Second tab control -->
        <TabControl Grid.Row="0" 
                    Grid.Column="2" 
                    Margin="10">
            <TabItem Header="All Messages">
                <Grid>
                    <DataGrid Name="allMessagesData"
                              ItemsSource="{Binding AllMessagesData}"
                              IsReadOnly="True"
                              AutoGenerateColumns="True"
                              BorderBrush="Gray"
                              BorderThickness="2"
                              EnableRowVirtualization="True"
                              EnableColumnVirtualization="True"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.IsDeferredScrollingEnabled="True" Grid.ColumnSpan="2">
                        <!--<DataGrid.Columns>
                            <DataGridTextColumn Header="Timestamp" Binding="{Binding Timestamp}"/>
                            <DataGridTextColumn Header="Topic" Binding="{Binding Topic}"/>
                            <DataGridTextColumn Header="Message" Binding="{Binding Message}"/>
                            <DataGridTextColumn Header="QoS" Binding="{Binding QoS}"/>
                        </DataGrid.Columns>-->

                    </DataGrid>
                </Grid>
            </TabItem>

            <TabItem Header="Live Messages">
                <Grid>
                    <DataGrid Name="liveMessagesData"
                              ItemsSource="{Binding LiveMessagesData}"
                              IsReadOnly="True"
                              AutoGenerateColumns="False"
                              BorderBrush="Gray"
                              BorderThickness="2"
                              EnableRowVirtualization="True"
                              EnableColumnVirtualization="True"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.IsDeferredScrollingEnabled="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Timestamp" Binding="{Binding Value.Timestamp}"/>
                            <DataGridTextColumn Header="Topic" Binding="{Binding Value.Topic}"/>
                            <DataGridTextColumn Header="Message" Binding="{Binding Value.Message}"/>
                            <DataGridTextColumn Header="QoS" Binding="{Binding Value.QoS}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid Grid.Row="2"
              Grid.Column="2"
              Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0">Console</Label>

            <ListView Grid.Row="1"
                      ItemsSource="{Binding ConsoleData}"
                      Name="consoleData"
                      BorderBrush="{Binding ShowNotification, Converter={StaticResource NotificationBrushConverter}}"
                      BorderThickness="2"
                      MouseDoubleClick="SilenceNotification"
                      Margin="0, 0, 0, 10">
                <!--<ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>-->
            </ListView>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0"
                         Margin="0, 0, 10, 0"/>
                
                <Button Grid.Column="1" 
                        Content="Execute Command"
                        Padding="10, 0, 10, 0" 
                        Click="ExecuteCommandButton_Clicked"/>
            </Grid>
        </Grid>

        <StatusBar Grid.Row="3"
                   Grid.ColumnSpan="3"
                   Background="{DynamicResource MahApps.Brushes.Badged.Background}">

            <StatusBarItem>
                <TextBlock Text="{Binding ConnectionStatus}"
                           ToolTip="{Binding ConnectionStatusToolTip}"/>
            </StatusBarItem>

            <StatusBarItem>
                <Separator/>
            </StatusBarItem>

            <StatusBarItem>
                <StackPanel Orientation="Horizontal"
                            ToolTip="{Binding SendingReceivingToolTip}">
                    <iconPacks:PackIconEntypo Kind="Upload"/>

                    <TextBlock Text="{Binding SendingStatus}"
                               Margin="5, 0, 0, 0"/>

                    <iconPacks:PackIconEntypo Kind="Download"
                                  Margin="10, 0, 0, 0"/>

                    <TextBlock Text="{Binding ReceivingStatus}"
                               Margin="5, 0, 0, 0"/>
                </StackPanel>
            </StatusBarItem>

            <StatusBarItem>
                <Separator/>
            </StatusBarItem>

            <StatusBarItem ToolTip="{Binding JobProgressToolTip}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconEntypo Width="16" 
                                              Height="16" 
                                              Kind="TimeSlot"/>

                    <!--<mah:MetroProgressBar Width="100"
                                          IsIndeterminate="True">
                    </mah:MetroProgressBar>-->

                    <ProgressBar Width="100" 
                                 Height="10" 
                                 Style="{x:Null}"
                                 IsIndeterminate="{Binding IsJobInProgress}"
                                 Visibility="Visible"
                                 Margin="5, 0, 0, 0"/>
                </StackPanel>
            </StatusBarItem>

            <StatusBarItem>
                <Separator/>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right"
                           Margin="0, 0, 15, 0">
                <StackPanel Orientation="Horizontal">
                    <Button Click="ClearDataButton_Clicked"
                            Content="Clear Data"
                            Padding="5, -2, 5, 0"
                            Margin="0, 0, 5, 0"
                            Height="15"/>
                    <Button Click="ClearConsoleButton_Clicked"
                            Content="Clear Console"
                            Padding="5, -2, 5, 0"
                            Height="15"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <GridSplitter Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      ShowsPreview="True"
                      Width="5"/>

        <GridSplitter Grid.Row="1"
                      Grid.Column="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      ShowsPreview="True"
                      Height="5"/>

        <!--<StatusBar Name="sbar" 
           VerticalAlignment="Bottom" Background="Beige" >

            <StatusBarItem>
                <TextBlock>Downloading File</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="100" Height="20"
                 Name="progressBar1">
                    <ProgressBar.Triggers>
                        <EventTrigger RoutedEvent="ProgressBar.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                Storyboard.TargetName="progressBar1" 
                Storyboard.TargetProperty="Value"
                From="0" To="100" Duration="0:0:5"  />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ProgressBar.Triggers>
                </ProgressBar>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock>Online</TextBlock>
            </StatusBarItem>
        </StatusBar>-->

    </Grid>
</mah:MetroWindow>
