<mah:MetroWindow x:Class="inspector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:inspector"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="MQTT Inspector" 
        Height="720" 
        Width="1280"
        ResizeMode="CanResizeWithGrip"
        Style="{DynamicResource MahApps.Styles.MetroWindow.VisualStudio}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:ConnectionStatusConverter x:Key="ConnectionStatusConverter"/>
            <local:ConnectTextConverter x:Key="ConnectTextConverter"/>
            <local:NotificationBrushConverter x:Key="NotificationBrushConverter"/>
            <local:NotificationTooltipConverter x:Key="NotificationTooltipConverter"/>
            <local:SubscribeStatusConverter x:Key="SubscribeStatusConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button Visibility="{Binding ShowNotification, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Style="{StaticResource MahApps.Styles.Button.Window.Notification.VisualStudio}"
                    ToolTip="{Binding NotificationCount, Converter={StaticResource NotificationTooltipConverter}}"
                    Click="SilenceNotification">
                <iconPacks:PackIconEntypo Width="16" Height="16" Kind="Flag"/>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>
        <!-- Auto is basically use the minimum size for the controls laid out -->
        <!-- * is basically use an equal size -->

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
            <!-- splitter -->
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <!-- splitter -->
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <!-- First tab control -->
        <!-- TODO: disable closing these tabs (dysfunctional otherwise) -->
        <TabControl Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Margin="10">
            <TabItem Name="ConnectTab" 
                     Header="Connect">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Broker connection status -->
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection Status:"/>
                            <Label Content="{Binding Connected, Converter={StaticResource ConnectionStatusConverter}}"/>
                        </StackPanel>
                    </Grid>

                    <!-- Broker connection selection area -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Margin="5" 
                                    Grid.Column="0">
                            <Label Content="Broker IP"/>
                            <ComboBox IsEditable="True"
                                      Text="{Binding IP}"
                                      IsEnabled="{Binding Editable}"/>
                        </StackPanel>

                        <StackPanel Margin="5" 
                                    Grid.Column="1">
                            <Label Content="Broker Port"/>
                            <ComboBox IsEditable="True"
                                      Text="{Binding Port}"
                                      IsEnabled="{Binding Editable}"/>
                        </StackPanel>
                    </Grid>

                    <Separator Margin="5"
                               Grid.Row="2"/>

                    <Grid Margin="5" 
                          Grid.Row="3">
                        <StackPanel>
                            <CheckBox Margin="5"
                                      Content="Enable SSL/TLS Encryption"
                                      IsChecked="{Binding EnableTLS}"/>

                            <Grid IsEnabled="{Binding EnableTLS}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Root CA cert -->
                                <Label Grid.Row="0"
                                       Content="Root CA Certificate Path:"/>
                                <TextBox Grid.Row="1"
                                         Text="{Binding CACert}"/>
                                <Button Grid.Row="1"
                                        Grid.Column="1"
                                        Content="Select Path"/>

                                <!-- Local client cert -->
                                <Label Grid.Row="2"
                                       Content="Client Certificate Path:"/>
                                <TextBox Grid.Row="3"
                                         Text="{Binding ClientCert}"/>
                                <Button Grid.Row="3"
                                        Grid.Column="1"
                                        Content="Select Path"/>

                                <!-- Client private key -->
                                <Label Grid.Row="4"
                                       Content="Private Key Path:"/>
                                <TextBox Grid.Row="5"
                                         Text="{Binding PrivateKey}"/>
                                <Button Grid.Row="5"
                                        Grid.Column="1"
                                        Content="Select Path"/>
                            </Grid>
                        </StackPanel>

                    </Grid>

                    <Separator Margin="5"
                               Grid.Row="4"/>

                    <Button Margin="5" 
                            Grid.Row="5" 
                            Content="{Binding Connected, Converter={StaticResource ConnectTextConverter}}"
                            Click="ConnectButton_Clicked"/>
                </Grid>

            </TabItem>

            <TabItem Name="SubscribeTab" 
                     Header="Subscribe">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Broker connection status -->
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Connection Status:"/>
                            <Label Content="{Binding Connected, Converter={StaticResource ConnectionStatusConverter}}"/>
                        </StackPanel>
                    </Grid>

                    <!-- Broker subscribe area -->
                    <Grid Grid.Row="1"
                          IsEnabled="{Binding Connected}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Margin="5" 
                                    Grid.Column="0">
                            <Label Content="MQTT Topic"/>
                            <ComboBox IsEditable="True"
                                      Text="{Binding SubscribeTopic}"/>
                        </StackPanel>

                        <StackPanel Margin="5" 
                                    Grid.Column="1"
                                    IsEnabled="{Binding EnableQoS}">
                            <Label Content="Quality of Service"/>
                            <ComboBox Text="{Binding SubscribeQoS}">
                                <ComboBoxItem>0 (At most once)</ComboBoxItem>
                                <ComboBoxItem>1 (At least once)</ComboBoxItem>
                                <ComboBoxItem>2 (Exactly once)</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>
                    </Grid>

                    <Button Grid.Row="2"
                            Margin="5, 5, 5, 5"
                            Content="{Binding IsSubscribedToCurrent, Converter={StaticResource SubscribeStatusConverter}}"
                            Click="SubscribeButton_Clicked"/>

                    <!-- Subscribed topics area -->
                    <Grid Grid.Row="3"
                          Margin="5, 5, 5, 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label>Subscribed MQTT Topics:</Label>
                        <ListView Grid.Row="1"
                                  ItemsSource="{Binding SubscribedTopics}"
                                  Name="subscribedTopics"
                                  BorderBrush="Gray"
                                  BorderThickness="2">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Name="PublishTab" 
                     Header="Publish">
                <TabItem.Content>Foreground property information goes here.</TabItem.Content>
            </TabItem>
        </TabControl>

        <!-- Second tab control -->
        <TabControl Grid.Row="0" 
                    Grid.Column="2" 
                    Margin="10">
            <TabItem Name="AllMessagesTab" 
                     Header="All Messages">
                <TabItem.Content>Something something.</TabItem.Content>
            </TabItem>

            <TabItem Name="LiveMessagesTab" 
                     Header="Live Messages">
                <TabItem.Content>Something something again.</TabItem.Content>
            </TabItem>
        </TabControl>

        <Grid Grid.Row="2"
              Grid.Column="2"
              Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0">Input/Output Console:</Label>

            <ListView Grid.Row="1"
                      ItemsSource="{Binding ConsoleOutput}"
                      Name="consoleOutput"
                      BorderBrush="{Binding ShowNotification, Converter={StaticResource NotificationBrushConverter}}"
                      BorderThickness="2"
                      MouseDoubleClick="SilenceNotification"
                      Margin="0, 0, 0, 10">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0"/>
                <Button Grid.Column="1" Content="Execute command"/>
            </Grid>
        </Grid>

        <StatusBar Grid.Row="3"
                   Grid.ColumnSpan="3"
                   Background="{DynamicResource MahApps.Brushes.Badged.Background}">
            
            
            <StatusBarItem>
                <TextBlock Text="{Binding ConnectionStatusExtended}"/>
            </StatusBarItem>

            <Separator/>

            <StatusBarItem>
                <iconPacks:PackIconEntypo Width="16" 
                                          Height="16" 
                                          Kind="Message"
                                          ToolTip="{Binding ProgressText}"/>
            </StatusBarItem>

            <StatusBarItem>
                <ProgressBar IsIndeterminate="True" 
                             Width="100" 
                             Height="10" 
                             Style="{x:Null}"
                             ToolTip="{Binding ProgressText}"
                             Visibility="{Binding ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>

        <GridSplitter Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      ShowsPreview="True"
                      Width="5"/>

        <GridSplitter Grid.Row="1"
                      Grid.Column="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      ShowsPreview="True"
                      Height="5"/>

        <!--<StatusBar Name="sbar" 
           VerticalAlignment="Bottom" Background="Beige" >

            <StatusBarItem>
                <TextBlock>Downloading File</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="100" Height="20"
                 Name="progressBar1">
                    <ProgressBar.Triggers>
                        <EventTrigger RoutedEvent="ProgressBar.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                Storyboard.TargetName="progressBar1" 
                Storyboard.TargetProperty="Value"
                From="0" To="100" Duration="0:0:5"  />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ProgressBar.Triggers>
                </ProgressBar>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock>Online</TextBlock>
            </StatusBarItem>
        </StatusBar>-->

    </Grid>
</mah:MetroWindow>
